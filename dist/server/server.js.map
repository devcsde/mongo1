{"version":3,"sources":["../../server/server.js"],"names":["require","_","express","bodyParser","ObjectID","mongoose","Todo","User","authenticate","app","port","process","env","PORT","use","json","post","req","res","todo","text","body","save","then","doc","send","e","status","get","find","todos","id","params","isValid","findById","catch","delete","findByIdAndRemove","patch","pick","isBoolean","completed","completedAt","Date","getTime","findByIdAndUpdate","$set","new","user","generateAuthToken","token","header","listen","console","log","module","exports"],"mappings":"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","file":"server.js","sourcesContent":["/**\r\n * Created by csche on 19.07.2017.\r\n */\r\nrequire(\"./config/config\");\r\n\r\nconst _ = require(\"lodash\");\r\nconst express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst {ObjectID} = require(\"mongodb\");\r\n\r\nconst {mongoose} = require(\"./db/mongoose\");\r\nconst {Todo} = require(\"./models/todo\");\r\nconst {User} = require(\"./models/user\");\r\nconst {authenticate} = require(\"./middleware/authenticate\");\r\n\r\nlet app = express();\r\n\r\nlet port = process.env.PORT;\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.post(\"/todos\", (req,res) =>{\r\n    let todo = new Todo({\r\n        text: req.body.text\r\n    });\r\n    todo.save().then((doc) => {\r\n        res.send(doc);\r\n    }, (e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.get(\"/todos\", (req, res) => {\r\n    Todo.find().then((todos) => {\r\n        res.send({todos});\r\n    }, (e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.get(\"/todos/:id\", (req, res) => {\r\n    let id = req.params.id;\r\n\r\n    if (!ObjectID.isValid(id)){\r\n        return res.status(404).send();\r\n    }\r\n    Todo.findById(id).then((todo) => {\r\n        if (!todo){\r\n            return res.status(404).send();\r\n        }\r\n        res.status(200).send({todo});\r\n\r\n    }).catch((e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.delete(\"/todos/:id\", (req, res) => {\r\n    // get the ID\r\n    let id = req.params.id;\r\n    // validate the ID --> not valid 404\r\n    if (!ObjectID.isValid(id)){\r\n        return res.status(404).send();\r\n    }\r\n    Todo.findByIdAndRemove(id).then((todo) => {\r\n        if (!todo){\r\n            return res.status(404).send();\r\n        }\r\n        res.status(200).send({todo});\r\n    }).catch((e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.patch(\"/todos/:id\", (req, res) => {\r\n    let id = req.params.id;\r\n    //  lodash pick out text/completed, if it exists and assign to body\r\n    // now only these can be accessed\r\n    let body = _.pick(req.body, [\"text\", \"completed\"]);\r\n\r\n    if (!ObjectID.isValid(id)){\r\n        return res.status(404).send();\r\n    }\r\n\r\n    if(_.isBoolean(body.completed) && body.completed){\r\n        body.completedAt = new Date().getTime();\r\n    } else {\r\n        body.completed = false;\r\n        body.completedAt = null;\r\n    }\r\n    \r\n    Todo.findByIdAndUpdate(id, {$set: body}, {new: true}).then((todo) => {\r\n        if (!todo){\r\n            return res.status(404).send();\r\n        }\r\n        res.send({todo});\r\n    }).catch((e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\n// POST /users\r\napp.post(\"/users\", (req,res) => {\r\n    let body = _.pick(req.body, [\"email\", \"password\"]);\r\n    let user = new User(body);\r\n\r\n    user.save().then(() => {\r\n        return user.generateAuthToken();\r\n    }).then((token) => {\r\n        res.header(\"x-auth\", token).send(user);\r\n    }).catch((e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.get(\"/users/me\", authenticate, (req, res) => {\r\n    res.send(req.user);\r\n});\r\n\r\napp.listen(port, () => {\r\n    console.log(`Started up at port ${port}`);\r\n});\r\n\r\nmodule.exports = {app};"]}