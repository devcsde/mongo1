{"version":3,"sources":["../../server/server.js"],"names":["require","_","express","bodyParser","ObjectID","mongoose","Todo","User","authenticate","app","port","process","env","PORT","use","json","post","req","res","todo","text","body","_creator","user","_id","save","then","doc","send","e","status","get","find","todos","id","params","isValid","findOne","catch","delete","findOneAndRemove","patch","pick","isBoolean","completed","completedAt","Date","getTime","findOneAndUpdate","$set","new","generateAuthToken","token","header","findByCredentials","email","password","removeToken","listen","console","log","module","exports"],"mappings":"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","file":"server.js","sourcesContent":["/**\r\n * Created by csche on 19.07.2017.\r\n */\r\nrequire(\"./config/config\");\r\n\r\nconst _ = require(\"lodash\");\r\nconst express = require(\"express\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst {ObjectID} = require(\"mongodb\");\r\n\r\nconst {mongoose} = require(\"./db/mongoose\");\r\nconst {Todo} = require(\"./models/todo\");\r\nconst {User} = require(\"./models/user\");\r\nconst {authenticate} = require(\"./middleware/authenticate\");\r\n\r\nlet app = express();\r\n\r\nlet port = process.env.PORT;\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.post(\"/todos\", authenticate, (req,res) =>{\r\n    let todo = new Todo({\r\n        text: req.body.text,\r\n        _creator: req.user._id\r\n    });\r\n    todo.save().then((doc) => {\r\n        res.send(doc);\r\n    }, (e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.get(\"/todos\", authenticate,(req, res) => {\r\n    Todo.find({\r\n        _creator: req.user._id\r\n    }).then((todos) => {\r\n        res.send({todos});\r\n    }, (e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.get(\"/todos/:id\", authenticate, (req, res) => {\r\n    let id = req.params.id;\r\n\r\n    if (!ObjectID.isValid(id)){\r\n        return res.status(404).send();\r\n    }\r\n    Todo.findOne({\r\n        _id: id,\r\n        _creator: req.user._id\r\n    }).then((todo) => {\r\n        if (!todo){\r\n            return res.status(404).send();\r\n        }\r\n        res.status(200).send({todo});\r\n\r\n    }).catch((e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.delete(\"/todos/:id\", authenticate, (req, res) => {\r\n    // get the ID\r\n    let id = req.params.id;\r\n    // validate the ID --> not valid 404\r\n    if (!ObjectID.isValid(id)){\r\n        return res.status(404).send();\r\n    }\r\n    Todo.findOneAndRemove({\r\n        _id: id,\r\n        _creator: req.user._id\r\n    }).then((todo) => {\r\n        if (!todo){\r\n            return res.status(404).send();\r\n        }\r\n        res.status(200).send({todo});\r\n    }).catch((e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.patch(\"/todos/:id\", authenticate, (req, res) => {\r\n    let id = req.params.id;\r\n    //  lodash pick out text/completed, if it exists and assign to body\r\n    // now only these can be accessed\r\n    let body = _.pick(req.body, [\"text\", \"completed\"]);\r\n\r\n    if (!ObjectID.isValid(id)){\r\n        return res.status(404).send();\r\n    }\r\n\r\n    if(_.isBoolean(body.completed) && body.completed){\r\n        body.completedAt = new Date().getTime();\r\n    } else {\r\n        body.completed = false;\r\n        body.completedAt = null;\r\n    }\r\n    \r\n    Todo.findOneAndUpdate({\r\n        _id: id,\r\n        _creator: req.user._id\r\n    }, {$set: body}, {new: true}).then((todo) => {\r\n        if (!todo){\r\n            return res.status(404).send();\r\n        }\r\n        res.send({todo});\r\n    }).catch((e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.post(\"/users\", (req,res) => {\r\n    let body = _.pick(req.body, [\"email\", \"password\"]);\r\n    let user = new User(body);\r\n\r\n    user.save().then(() => {\r\n        return user.generateAuthToken();\r\n    }).then((token) => {\r\n        res.header(\"x-auth\", token).send(user);\r\n    }).catch((e) => {\r\n        res.status(400).send(e);\r\n    });\r\n});\r\n\r\napp.get(\"/users/me\", authenticate, (req, res) => {\r\n    res.send(req.user);\r\n});\r\n\r\napp.post(\"/users/login\", (req, res) => {\r\n    let body = _.pick(req.body, [\"email\", \"password\"]);\r\n\r\n    User.findByCredentials(body.email, body.password).then((user) => {\r\n        return user.generateAuthToken().then((token) => {\r\n            res.header(\"x-auth\", token).send(user);\r\n        });\r\n    }).catch((e) => {\r\n        res.status(400).send();\r\n    });\r\n});\r\n\r\napp.delete(\"/users/me/token\", authenticate, (req, res) => {\r\n    req.user.removeToken(req.token).then(() => {\r\n        res.status(200).send();\r\n    }, () => {\r\n        res.status(400).send();\r\n    });\r\n});\r\n\r\napp.listen(port, () => {\r\n    console.log(`Started up at port ${port}`);\r\n});\r\n\r\nmodule.exports = {app};"]}